{"version":3,"sources":["config.js","contexts/userContext.js","components/GamePlayer/gamePlayer.js","components/SinglePlayerGame/singlePlayerGame.js","reducers/gameReducer.js","contexts/gameContext.js","components/MultiPlayerGame/multiPlayerGame.js","components/Profile/profile.js","contexts/modalContext.js","components/Login/login.js","components/GameDetails/gameDetails.js","components/GameList/gameList.js","components/Home/home.js","components/Signup/signup.js","components/Navbar/navbar.js","components/Modal/Modal.js","App.js","serviceWorker.js","index.js","components/Navbar/logo.png"],"names":["config","process","REACT_APP_STAGE","API_URL","MULTIPLAYER_GAME_URL","SINGLEPLAYER_GAME_URL","UserContext","createContext","initialState","JSON","parse","localStorage","getItem","id","username","accessToken","challenges","tickets","UserContextProvider","props","useState","user","setUser","setUserInfo","removeItem","setItem","stringify","login","userData","a","fetch","method","headers","body","res","json","response","_id","completedChallenges","signup","console","log","Provider","value","signout","children","UnityPlayer","game","history","useHistory","useContext","useEffect","push","className","src","SinglePlayerGame","Socket","gamePath","location","state","gameUrl","gameName","replace","ready","setReady","isDuplicate","setIsDuplicate","addToast","useToasts","io","on","emit","userId","challenge","reward","challengeName","appearance","close","gameReducer","action","type","playerId","data","thisPlayerId","allPlayers","newPlayer","filter","player","removedPlayerID","GameContext","GameContextProvider","useReducer","gameDispatch","Game","removedPlayer","pathname","Profile","map","key","ModalContext","isShowModal","component","ModalContextProvider","modal","setModal","openModal","closeModal","Login","setUsername","password","setPassword","handleSubmit","e","preventDefault","onSubmit","placeholder","required","onChange","target","GameDetails","title","details","gameType","alt","onClick","GameList","Home","Signup","email","setEmail","test","Navbar","to","Logo","Modal","setAppElement","CModal","w","style","overlay","borderColor","content","maxWidth","top","left","right","bottom","isOpen","onRequestClose","Fragment","App","autoDismissTimeout","path","exact","MultiPlayerGame","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3ce7e284.chunk.js","sourcesContent":["const dev = {\r\n    API_URL : \"http://localhost:8080\",\r\n    MULTIPLAYER_GAME_URL : \"http://localhost:7000\",\r\n    SINGLEPLAYER_GAME_URL : \"http://localhost:8000\"\r\n  };\r\n  \r\n  const prod = {\r\n    API_URL : \"https://unity-react-games.herokuapp.com\",\r\n    MULTIPLAYER_GAME_URL : \"https://online-game-iframe.herokuapp.com\",\r\n    SINGLEPLAYER_GAME_URL : \"https://single-player-games-iframe.herokuapp.com\"\r\n  };\r\n  \r\n  const config = process.env.REACT_APP_STAGE !== 'dev'\r\n    ? prod\r\n    : dev;\r\n  \r\n  export default {\r\n    ...config\r\n  };","import React, {createContext, useState} from 'react';\r\nimport { userReducer } from '../reducers/userReducer';\r\nimport config from \"../config\"\r\n\r\nexport const UserContext = createContext();\r\n\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"jwt\")) || \r\n{\r\n  id : null,\r\n  username : \"\",\r\n  accessToken : \"\",\r\n  challenges: null,\r\n  tickets : null\r\n};\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [user, setUser] = useState(initialState)\r\n    \r\n  const setUserInfo = (user) => {\r\n    //remove last local storage\r\n    localStorage.removeItem(\"jwt\")\r\n    localStorage.setItem(\"jwt\", JSON.stringify(user))\r\n    setUser(user)\r\n  }\r\n\r\n  const clearUserInfo = () =>{\r\n    localStorage.removeItem(\"jwt\")\r\n    setUser({\r\n      id : null,\r\n      username : \"\",\r\n      accessToken : \"\",\r\n      challenges: null,\r\n      tickets : null\r\n    })\r\n  }\r\n\r\n    const signout = () =>{\r\n      clearUserInfo()\r\n    }\r\n\r\n    const login  = async (userData) => {\r\n        const res =  await fetch(`${config.API_URL}/users/login`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n          });\r\n          const response = await res.json()\r\n          // find better place to put this\r\n          const user = {\r\n            id : response.user._id,\r\n            username : response.user.username,\r\n            accessToken : response.accessToken,\r\n            challenges: response.user.completedChallenges,\r\n            tickets : response.user.tickets\r\n          }\r\n          setUserInfo(user)\r\n\r\n    }\r\n\r\n    const signup = async (userData) =>{\r\n      const res =  await fetch(`${config.API_URL}/users/signup`, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n        });\r\n        const response = await res.json()\r\n        console.log(response)\r\n        const user = {\r\n          id : response.user._id,\r\n          username : response.user.username,\r\n          accessToken : response.accessToken,\r\n          challenges: response.user.completedChallenges,\r\n          tickets : response.user.tickets\r\n        }\r\n        setUserInfo(user)\r\n  }\r\n\r\n\r\n    const test = async () =>{\r\n      const res =  await fetch(`${config.API_URL}/users/test`, {\r\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Authorization' : `Bearer ${user.accessToken}` ,\r\n            'Content-Type': 'application/json'\r\n          },\r\n        \r\n        });\r\n        const response = await res.json()\r\n        console.log(response)\r\n  }\r\n\r\n\r\n\r\n    return(\r\n        <UserContext.Provider value={{user, login,signout,signup, setUserInfo}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;","import React, {useEffect, useContext} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport \"./gamePlayer.css\"\r\nconst UnityPlayer = ({game}) => {\r\n    const history = useHistory()\r\n    const {user} = useContext(UserContext)\r\n    console.log(game)\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n \r\n    return ( \r\n        <div id=\"unity-body\">\r\n            <iframe className=\"unity-player\"  src={game} ></iframe>\r\n      </div>\r\n                \r\n        \r\n     );\r\n}\r\n \r\nexport default UnityPlayer;","import React, {useEffect,useContext,useState} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport GamePlayer from '../GamePlayer/gamePlayer';\r\nimport config from \"../../config\"\r\nimport io from \"socket.io-client\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst SinglePlayerGame = (props) => {\r\n    let Socket = null\r\n    const gamePath = props.location.state.gamePath;\r\n    const gameUrl = config.SINGLEPLAYER_GAME_URL\r\n    const gameName = gamePath.replace(/\\//g, '');\r\n    const {user, setUserInfo} = useContext(UserContext)\r\n    const [ready, setReady] = useState(false)\r\n    const [isDuplicate, setIsDuplicate] = useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n    console.log(gameUrl, gamePath)\r\n\r\n    useEffect(() =>{\r\n        Socket = io(gameUrl); \r\n            if(Socket){\r\n                Socket.on(\"connect\", () => {\r\n                    console.log(\"connetion\")\r\n                    Socket.emit(\"ReactConnected\",{userId : user.id, gameName : gameName})\r\n            });\r\n\r\n            Socket.on(\"gameReady\" , () =>{\r\n               setReady(true)\r\n            })\r\n\r\n            Socket.on(\"isDuplicate\" , () =>{\r\n                setIsDuplicate(true)\r\n                setReady(true)\r\n             })\r\n \r\n            Socket.on(\"challengeCompleted\" , (challenge) =>{\r\n                console.log(challenge)\r\n                user.challenges.push(challenge)\r\n                user.tickets += challenge.reward;\r\n                setUserInfo(user)\r\n                addToast(\"good job you completed challenge: \" + challenge.challengeName, { appearance: 'success' })\r\n            })\r\n\r\n            return () =>{\r\n                console.log(\"in return\")\r\n                Socket.close()\r\n            }\r\n        }\r\n    },[])\r\n\r\n    if(ready){\r\n        return ( \r\n            isDuplicate ? <div>Looks Like YOu Have This Open In another Tab</div> : <GamePlayer game={gameUrl + gamePath}/>\r\n         );\r\n    } else {\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n \r\n}\r\n \r\nexport default SinglePlayerGame;","export const gameReducer = (state,action) =>{\r\n    switch(action.type){\r\n\r\n        case 'START_GAME':\r\n            console.log(action)\r\n            return {playerId : action.data.thisPlayerId, isDuplicate : false, allPlayers : action.data.allPlayers}\r\n\r\n        case 'SET_PLAYER_AS_DUPLICATE':\r\n            console.log(\"SET_PLAYER_AS_DUPLICATE\", action)\r\n            return {playerId : action.playerId, isDuplicate : true, allPlayers : []}\r\n\r\n        case 'ADD_NEW_PLAYER':\r\n            console.log(\"ADD_NEW_PLAYER\", action)\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate, allPlayers : [...state.allPlayers, action.newPlayer]}\r\n\r\n        case \"REMOVE_PLAYER\":\r\n            console.log(\"REMOVE_PLAYER\", action)\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate,  allPlayers : state.allPlayers.filter(player => player.id != action.removedPlayerID)}\r\n\r\n        case \"CLEAR_ALL_PLAYERS\":\r\n            console.log(\"CLEAR_ALL_PLAYERS\", action)\r\n            return {thisPlayerId : \"\", allPlayers: [],isDuplicate : false}\r\n\r\n        case \"SET_ALL_PLAYERS\":\r\n            console.log(\"set all players\", action.allPlayers)\r\n            return {...state, allPlayers : action.allPlayers}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport { gameReducer } from '../reducers/gameReducer';\r\n\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n    const [game, gameDispatch] = useReducer(gameReducer,{ thisPlayerId : \"\", isDuplicate : false, allPlayers: []})\r\n    \r\n    return(\r\n        <GameContext.Provider value={{game, gameDispatch }}>\r\n            {props.children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GameContextProvider;","import React, {useEffect, useContext,useState} from \"react\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { GameContext } from \"../../contexts/gameContext\";\r\nimport io from \"socket.io-client\";\r\nimport \"./multiPlayerGame.css\"\r\nimport GamePlayer from \"../GamePlayer/gamePlayer\";\r\nimport config from \"../../config\"\r\n\r\nconst Game = (props) => {\r\n\r\n  const {user} = useContext(UserContext)\r\n  const {game,gameDispatch} = useContext(GameContext)\r\n  let Socket = null\r\n  const [ready, setReady] = useState(false)\r\n\r\n    useEffect(() =>{\r\n      console.log(\"in use effect\")\r\n      Socket = io(config.MULTIPLAYER_GAME_URL);  \r\n      if(Socket){\r\n        Socket.on(\"connect\", () => {\r\n          console.log(\"connetion\")\r\n        });\r\n       \r\n        Socket.emit(\"addReactUser\", user);\r\n\r\n        // gets me all players \r\n        Socket.on(\"reactFirstSpawn\", (data) =>{  \r\n          console.log(\"reactFirstSpawn\")\r\n           gameDispatch({type : \"START_GAME\", data})\r\n           setReady(true)\r\n        })\r\n        \r\n        Socket.on(\"duplicatePlayer\", (playerId) =>{\r\n          console.log(\"duplicatePlayer\")\r\n           gameDispatch({type : \"SET_PLAYER_AS_DUPLICATE\", playerId})\r\n           setReady(true)\r\n        })\r\n\r\n        //add new player\r\n        Socket.on(\"reactSpawn\", (newPlayer) =>{\r\n          console.log(\"reactSpawn\")\r\n\r\n          //if we are signed in then show us the new player\r\n             gameDispatch({type : \"ADD_NEW_PLAYER\", newPlayer})\r\n        })\r\n\r\n        //if a player diconnects or signs out\r\n        Socket.on(\"disconnectFromReact\", (removedPlayer)=>{\r\n          console.log(\"in disconnectFromReact\",removedPlayer)\r\n           //remove the dsiconnected player\r\n           // getting called twice for some reason \r\n           if(!game.isDuplicate){\r\n              gameDispatch({type : \"REMOVE_PLAYER\", removedPlayerID: removedPlayer})\r\n           }\r\n           \r\n       })\r\n        return  () =>{\r\n          console.log(\"in return\")\r\n           gameDispatch({type : \"CLEAR_ALL_PLAYERS\"})\r\n          Socket.close()\r\n        }\r\n      } \r\n    },[])\r\n    \r\n    if(ready){\r\n      return (\r\n        game.isDuplicate ?\r\n              <div>Looks like you have this opened in anoyher tab try closing and refreshing the page</div>                             \r\n            :     \r\n            <GamePlayer game={config.MULTIPLAYER_GAME_URL + props.location.pathname}/>              \r\n      );\r\n    }else {\r\n      return(<div>Loading...</div>)\r\n    }\r\n};\r\n\r\nexport default Game","import React, {useContext,useEffect} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./profile.css\"\r\nconst Profile = () => {\r\n    const {user} = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            console.log(\"no user\")\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n\r\n    if(user.id){\r\n        return ( \r\n            <div>\r\n                <h1>Welcome {user.username}</h1>\r\n                <div>\r\n                    <h2>Completed Challenges</h2>\r\n                    <ul>\r\n                        {user.challenges.map((challenge) => {\r\n                           return <li className=\"challenges\" key={challenge._id}>challenge name: {challenge.challengeName}</li>\r\n                        })}\r\n                    </ul>\r\n                    <h3>Total Tickets: {user.tickets}</h3>\r\n                </div>\r\n            </div>\r\n            );\r\n    }else{\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n \r\nexport default Profile;","import React, {createContext, useState} from 'react';\r\n\r\n\r\nexport const ModalContext = createContext();\r\n\r\n\r\nconst initialState = {isShowModal : false, component:\"\"};\r\n\r\nconst ModalContextProvider = (props) => {\r\n    const [modal, setModal] = useState(initialState)\r\n    \r\n    const openModal = (component) =>{\r\n        setModal({\r\n            isShowModal : true,\r\n            component :  component\r\n        })\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setModal({\r\n            isShowModal : false,\r\n            component : \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modal, openModal,closeModal }}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider\r\n\r\n\r\n","import React,{useState,useContext} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\n\r\nconst Login = () => {\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const {login} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()  \r\n        const userData = {\r\n            username : username,\r\n            password : password\r\n        }\r\n        await login(userData)\r\n        closeModal()\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"username\" required value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n            <input type=\"password\" placeholder=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input type=\"submit\" value=\"Login\"/>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useContext} from 'react';\r\nimport \"./gameDetails.css\"\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Login from '../Login/login';\r\n\r\n\r\nconst GameDetails = ({title, details,gameType, gameName,gamePath}) => {\r\n    const {user} = useContext(UserContext)\r\n    const {openModal} = useContext(ModalContext)\r\n    const history = useHistory()\r\n    const toGame = () =>{\r\n        history.push({\r\n                pathname : `${gameType}`,\r\n                state:  {gameName, gamePath} \r\n               \r\n            })   \r\n    }\r\n\r\n    return ( \r\n        <div className=\"game-details\">\r\n            <div className=\"game-details-image-container\">\r\n                <img src=\"https://images.unsplash.com/photo-1589289959525-b5b685332c7f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80\" alt=\"none\"/>\r\n            </div>\r\n\r\n            <div className=\"game-details-content\">\r\n                <p className=\"game-details-title text-medium\">\r\n                   {title}\r\n                </p>\r\n                <div className=\"game-details-info\">\r\n                    <p className=\"text-medium\">{details}</p>\r\n                   {user.id ? \r\n                   <p className=\"game-details-play text-medium\" onClick={() => toGame()}>Play</p> :\r\n                   <p className=\"game-details-play text-medium\" onClick={() => openModal(Login)}>Log In to Play</p>\r\n                   }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameDetails;","import React from 'react';\r\nimport GameDetails from \"../GameDetails/gameDetails\"\r\nimport \"./gameList.css\"\r\n\r\nconst GameList = () => {\r\n\r\n    const games = []\r\n\r\n    return ( \r\n            <div className=\"game-list-container\">\r\n                <section className=\"game-list\">\r\n                   \r\n                        <GameDetails title=\"online game\" details=\"its a mulitplayer game\" gameType=\"/mulitPlayerGame\" gameType=\"/mulitPlayerGame\" gameName=\"onlineGame\"/>\r\n                        <GameDetails title=\"Stick game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/stickGame\" gameName=\"stick adventure demo\"/>\r\n                        <GameDetails title=\"Cube game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/cubeGame\" gameName=\"Cube Game Demo\"/>\r\n                        \r\n              \r\n                    \r\n                </section>\r\n            </div>\r\n        \r\n      \r\n     );\r\n}\r\n \r\nexport default GameList;","import React from 'react';\r\nimport GameList from \"../GameList/gameList\"\r\nimport \"./home.css\"\r\n\r\nconst Home = () => {\r\n\r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"top-section\">\r\n        < h1>Select a Game</h1>\r\n        </div>\r\n        <div className=\"game-list-section\">\r\n        <GameList/>\r\n        </div>\r\n      </div>\r\n      \r\n     );\r\n}\r\n \r\nexport default Home;","import React,{useState,useContext} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\n\r\nconst Signup = () => {\r\n    const [username,setUsername] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const {signup, test} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()  \r\n        const userData = {\r\n            username : username,\r\n            password : password,\r\n            email : email\r\n        }\r\n        await signup(userData)\r\n        closeModal();\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"username\" required value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n            <input type=\"email\" placeholder=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n\r\n            <input type=\"password\" placeholder=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input type=\"submit\" value=\"Sign up\"/>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Signup;","import React, {useContext,useState, useEffect} from 'react';\r\nimport Login from \"../Login/login\"\r\nimport Signup from \"../Signup/signup\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"./navbar.css\"\r\nimport Logo from \"./logo.png\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport {UserContext} from '../../contexts/userContext';\r\n\r\n\r\nconst Navbar = () => {\r\n  const {openModal} = useContext(ModalContext)\r\n  const {user, signout} = useContext(UserContext)\r\n\r\n\r\n    return ( \r\n        <header>\r\n          <Link  className=\"logo-container\" to=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Logo\" />\r\n          </Link>\r\n          <nav>     \r\n              { user.id ? \r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => signout()}><a/>Signout</li>\r\n                    <li> <Link to=\"/profile\">Profile</Link></li>\r\n                  </ul>\r\n                  :\r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => openModal(Signup)}><a/>Sign Up</li>\r\n                    <li onClick={() => openModal(Login)}><a/>Login</li>\r\n                  </ul>\r\n              }\r\n            \r\n          </nav>\r\n          {/* <a className=\"cta\"><button>Contact</button></a> */}\r\n      </header> \r\n     );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext,useEffect,useState} from 'react';\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Modal from \"react-modal\";\r\nimport Login from \"../Login/login\" \r\n\r\nModal.setAppElement('#root')\r\nconst CModal = () => {\r\n    const {modal, closeModal} = useContext(ModalContext)     \r\n    return ( \r\n        <div>      \r\n            <Modal w\r\n            style={{overlay :{borderColor: \"grey\"},content : {maxWidth : \"100%\", top: '50px',\r\n            left: '50px',\r\n            right: '50px',\r\n            bottom: '50px',} }} \r\n            isOpen={modal.isShowModal}\r\n            onRequestClose={() => closeModal() }\r\n            >\r\n                <React.Fragment>\r\n             {modal.component != \"\" ? <modal.component/> : <></>}\r\n              </React.Fragment>\r\n                <button onClick={() => closeModal()}></button>\r\n            </Modal>\r\n        </div> \r\n     ) \r\n}\r\n \r\nexport default CModal;","import React from 'react';\nimport SinglePlayerGame from \"./components/SinglePlayerGame/singlePlayerGame\"\nimport MultiPlayerGame from \"./components/MultiPlayerGame/multiPlayerGame\"\nimport Profile from './components/Profile/profile';\nimport { ToastProvider } from 'react-toast-notifications'\n\nimport Home from \"./components/Home/home\"\nimport Navbar from \"./components/Navbar/navbar\"\nimport GameContextProvider from './contexts/gameContext';\nimport UserContextProvider from './contexts/userContext';\nimport ModalContextProvider from './contexts/modalContext';\nimport { BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport CModal from './components/Modal/Modal';\nimport config from \"./config\"\n\nfunction App() {\n\n  console.log(config)\n\n  return (\n    <Router>\n      <div className=\"App\">\n      <ToastProvider autoDismissTimeout={3000}>\n        <ModalContextProvider>\n        <UserContextProvider>\n        <GameContextProvider>\n          <Navbar/> \n          <CModal/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/mulitPlayerGame\" exact  component={MultiPlayerGame}/>   \n              <Route path=\"/singlePlayerGame\"  component={SinglePlayerGame}/>  \n              <Route path=\"/profile\"  exact component={Profile}/>     \n              <Route component={Home}/>  \n            </Switch>\n             \n        </GameContextProvider>\n        </UserContextProvider>\n        </ModalContextProvider>\n        </ToastProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3fa434f6.png\";"],"sourceRoot":""}