{"version":3,"sources":["config.js","contexts/userContext.js","components/GamePlayer/gamePlayer.js","components/SinglePlayerGame/singlePlayerGame.js","reducers/gameReducer.js","contexts/gameContext.js","components/MultiPlayerGame/multiPlayerGame.js","components/Profile/profile.js","contexts/modalContext.js","components/Form/spinner.js","components/Form/message.js","components/Form/input.js","components/Form/select.js","components/Form/form.js","components/Login/login.js","components/GameDetails/gameDetails.js","components/GameList/gameList.js","components/Home/home.js","components/Signup/signup.js","components/Navbar/navbar.js","components/Modal/Modal.js","contexts/adminContext.js","components/Admin/adminSearch.js","components/Admin/adminPagination.js","components/Admin/adminEdit.js","components/Admin/adminTable.js","components/Admin/adminTabs.js","components/Admin/adminCreate.js","components/Admin/admin.js","App.js","serviceWorker.js","index.js","components/Navbar/logo.png"],"names":["config","API_URL","MULTIPLAYER_GAME_URL","SINGLEPLAYER_GAME_URL","UserContext","createContext","initialState","id","username","accessToken","completedChallenges","tickets","UserContextProvider","props","useState","JSON","parse","localStorage","getItem","user","setUser","setUserInfo","userData","undefined","_id","removeItem","setItem","stringify","validateResponse","res","a","status","text","json","response","login","fetch","method","headers","body","signup","Provider","value","signout","children","UnityPlayer","game","history","useHistory","useContext","useEffect","push","className","src","SinglePlayerGame","Socket","gamePath","location","state","gameUrl","gameName","replace","ready","setReady","isDuplicate","setIsDuplicate","addToast","useToasts","io","on","console","log","emit","userId","challenge","reward","challengeName","appearance","close","gameReducer","action","type","playerId","data","thisPlayerId","allPlayers","newPlayer","filter","player","removedPlayerID","GameContext","GameContextProvider","useReducer","gameDispatch","Game","removedPlayer","Profile","map","completedChallenge","key","ModalContext","isShowModal","component","ModalContextProvider","modal","setModal","openModal","closeModal","FormSpinner","loading","Spinner","animation","variant","Message","Field","field","onChange","formValidation","label","validation","attributes","register","errors","name","watch","Fragment","ref","required","pattern","message","autoFocus","SelectField","currentValue","options","setOptions","o","forEach","option","Object","keys","defaultValue","Form","formName","onSubmit","formResponse","useForm","handleSubmit","formExists","setFormExist","firstInputLoad","setFirstInputLoad","firstSelectLoad","setFirstSelectLoad","fields","form","setForm","getForm","formData","fieldsRef","useRef","updateFields","newFields","prevState","current","feilds","handleChange","useCallback","e","target","getAttribute","checked","handleSelectChange","spinner","reduce","defaultChecked","setInitialInputValues","disabled","buttonText","Login","setFormResponse","setTimeout","GameDetails","title","details","gameType","alt","onClick","pathname","GameList","Home","Signup","class","showErrorMessage","setShowErrorMessage","password","values","placeholder","minLength","email","validate","password_repeat","Navbar","to","Logo","Modal","setAppElement","CModal","style","overlay","borderColor","content","height","width","position","margin","left","right","padding","zIndex","isOpen","onRequestClose","AdminContext","initialTable","entityType","rows","totalCount","isLoading","exclude","initialFilter","dropdown","initialPagination","buttons","skip","limit","AdminContextProvider","table","setTable","setFilter","pagination","setPagination","setNewTable","setIsLoading","tableData","tableRows","entities","AdminSearch","setDropdown","items","header","Group","controlId","Label","Control","as","custom","AdminPagination","setNewPagination","number","paginateItem","Pagination","Item","Math","ceil","length","AdminEdit","errorStatus","includes","toString","newEntity","updatedRows","row","AdminTable","Table","striped","bordered","hover","tableHeaders","th","index","tr","td","AdminTabs","resetSearchValue","Tabs","activeKey","onSelect","Tab","eventKey","AdminCreate","Admin","App","autoDismissTimeout","path","exact","MultiPlayerGame","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.51d195af.chunk.js","sourcesContent":["const dev = {\r\n    API_URL : \"http://localhost:8080\",\r\n    MULTIPLAYER_GAME_URL : \"http://localhost:7000\",\r\n    SINGLEPLAYER_GAME_URL : \"http://localhost:8000\"\r\n  };\r\n  \r\n  const prod = {\r\n    API_URL : \"https://unity-react-games.herokuapp.com\",\r\n    MULTIPLAYER_GAME_URL : \"https://online-game-iframe.herokuapp.com\",\r\n    SINGLEPLAYER_GAME_URL : \"https://single-player-games-iframe.herokuapp.com\"\r\n  };\r\n  \r\n  const config = process.env.NODE_ENV  === 'production'\r\n    ? prod\r\n    : dev;\r\n  \r\n  export default {\r\n    ...config\r\n  };","import React, {createContext, useState} from 'react';\r\nimport { userReducer } from '../reducers/userReducer';\r\nimport config from \"../config\"\r\n\r\nexport const UserContext = createContext();\r\n\r\n\r\nconst initialState =  \r\n{\r\n  id : null,\r\n  username : \"\",\r\n  accessToken : \"\",\r\n  completedChallenges: null,\r\n  tickets : null\r\n};\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"jwt\")) || initialState)\r\n    \r\n  const setUserInfo = (userData) => {\r\n    //fix _id problem\r\n    const id = userData._id == undefined ? userData.id : userData._id\r\n    const user = {\r\n      id : id,\r\n      username : userData.username,\r\n      accessToken : userData.accessToken,\r\n      completedChallenges: userData.completedChallenges,\r\n      tickets : userData.tickets\r\n    }\r\n    localStorage.removeItem(\"jwt\")\r\n    localStorage.setItem(\"jwt\", JSON.stringify(user))\r\n    setUser(user)\r\n  }\r\n\r\n  const signout = () =>{\r\n      localStorage.removeItem(\"jwt\")\r\n      setUser(initialState)\r\n    }\r\n\r\n  const validateResponse = async (res) =>{\r\n    if(res.status === (404 || 500)){\r\n      return await res.text()\r\n    }else{\r\n      const response = await res.json()\r\n      setUserInfo(response.user)\r\n      return(\"success\")\r\n    }\r\n  }\r\n\r\n    const login  = async (userData) => {\r\n        const res =  await fetch(`${config.API_URL}/user/login`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n          });\r\n          return await validateResponse(res)\r\n    }\r\n\r\n    const signup = async (userData) =>{\r\n      const res =  await fetch(`${config.API_URL}/user/signup`, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n        });\r\n        return await validateResponse(res)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <UserContext.Provider value={{user, login,signout,signup, setUserInfo}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;\r\n\r\n\r\n\r\n\r\n// example of access token for later\r\n\r\n  //   const test = async () =>{\r\n  //     const res =  await fetch(`${config.API_URL}/users/test`, {\r\n  //         method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n  //         headers: {\r\n  //           'Authorization' : `Bearer ${user.accessToken}` ,\r\n  //           'Content-Type': 'application/json'\r\n  //         },\r\n        \r\n  //       });\r\n  //       const response = await res.json()\r\n  //       console.log(response)\r\n  // }\r\n","import React, {useEffect, useContext} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport \"./gamePlayer.css\"\r\nconst UnityPlayer = ({game}) => {\r\n    const history = useHistory()\r\n    const {user} = useContext(UserContext)\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n \r\n    return ( \r\n        <div id=\"unity-body\">\r\n            <iframe className=\"unity-player\"  src={game} ></iframe>\r\n      </div>\r\n                \r\n        \r\n     );\r\n}\r\n \r\nexport default UnityPlayer;","import React, {useEffect,useContext,useState} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport GamePlayer from '../GamePlayer/gamePlayer';\r\nimport config from \"../../config\"\r\nimport io from \"socket.io-client\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst SinglePlayerGame = (props) => {\r\n    let Socket = null\r\n    const gamePath = props.location.state.gamePath;\r\n    const gameUrl = config.SINGLEPLAYER_GAME_URL\r\n    const gameName = gamePath.replace(/\\//g, '');\r\n    const {user, setUserInfo} = useContext(UserContext)\r\n    const [ready, setReady] = useState(false)\r\n    const [isDuplicate, setIsDuplicate] = useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n\r\n    useEffect(() =>{\r\n        Socket = io(config.SINGLEPLAYER_GAME_URL); \r\n            if(Socket){\r\n                Socket.on(\"connect\", () => {\r\n                    console.log(\"connetion\")\r\n                    Socket.emit(\"ReactConnected\",{userId : user.id, gameName : gameName})\r\n            });\r\n\r\n            Socket.on(\"gameReady\" , () =>{\r\n               setReady(true)\r\n            })\r\n\r\n            Socket.on(\"isDuplicate\" , () =>{\r\n                setIsDuplicate(true)\r\n                setReady(true)\r\n             })\r\n \r\n            Socket.on(\"challengeCompleted\" , (challenge) =>{\r\n                user.completedChallenges.push(challenge)\r\n                user.tickets += challenge.reward;\r\n                setUserInfo(user)\r\n                addToast(\"good job you completed challenge: \" + challenge.challengeName, { appearance: 'success' })\r\n            })\r\n\r\n            return () =>{\r\n                Socket.close()\r\n            }\r\n        }\r\n    },[])\r\n\r\n    if(ready){\r\n        return ( \r\n            isDuplicate ? <div>Looks Like YOu Have This Open In another Tab</div> : <GamePlayer game={gameUrl + gamePath + `/?${user.id}` }/>\r\n         );\r\n    } else {\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n \r\n}\r\n \r\nexport default SinglePlayerGame;","export const gameReducer = (state,action) =>{\r\n    switch(action.type){\r\n\r\n        case 'START_GAME':\r\n            return {playerId : action.data.thisPlayerId, isDuplicate : false, allPlayers : action.data.allPlayers}\r\n\r\n        case 'SET_PLAYER_AS_DUPLICATE':\r\n            return {playerId : action.playerId, isDuplicate : true, allPlayers : []}\r\n\r\n        case 'ADD_NEW_PLAYER':\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate, allPlayers : [...state.allPlayers, action.newPlayer]}\r\n\r\n        case \"REMOVE_PLAYER\":\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate,  allPlayers : state.allPlayers.filter(player => player.id != action.removedPlayerID)}\r\n\r\n        case \"CLEAR_ALL_PLAYERS\":\r\n            return {thisPlayerId : \"\", allPlayers: [],isDuplicate : false}\r\n\r\n        case \"SET_ALL_PLAYERS\":\r\n            return {...state, allPlayers : action.allPlayers}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport { gameReducer } from '../reducers/gameReducer';\r\n\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n    const [game, gameDispatch] = useReducer(gameReducer,{ thisPlayerId : \"\", isDuplicate : false, allPlayers: []})\r\n    \r\n    return(\r\n        <GameContext.Provider value={{game, gameDispatch }}>\r\n            {props.children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GameContextProvider;","import React, {useEffect, useContext,useState} from \"react\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { GameContext } from \"../../contexts/gameContext\";\r\nimport io from \"socket.io-client\";\r\nimport \"./multiPlayerGame.css\"\r\nimport GamePlayer from \"../GamePlayer/gamePlayer\";\r\nimport config from \"../../config\"\r\n\r\nconst Game = (props) => {\r\n\r\n  const {user} = useContext(UserContext)\r\n  const {game,gameDispatch} = useContext(GameContext)\r\n  let Socket = null\r\n  const [ready, setReady] = useState(false)\r\n\r\n    useEffect(() =>{\r\n      Socket = io(config.MULTIPLAYER_GAME_URL);  \r\n      if(Socket){\r\n        Socket.on(\"connect\", () => {\r\n          console.log(\"connetion\")\r\n        });\r\n       \r\n        Socket.emit(\"addReactUser\", user);\r\n\r\n        // gets me all players \r\n        Socket.on(\"reactFirstSpawn\", (data) =>{  \r\n          console.log(\"reactFirstSpawn\")\r\n           gameDispatch({type : \"START_GAME\", data})\r\n           setReady(true)\r\n        })\r\n        \r\n        Socket.on(\"duplicatePlayer\", (playerId) =>{\r\n          console.log(\"duplicatePlayer\")\r\n           gameDispatch({type : \"SET_PLAYER_AS_DUPLICATE\", playerId})\r\n           setReady(true)\r\n        })\r\n\r\n        //add new player\r\n        Socket.on(\"reactSpawn\", (newPlayer) =>{\r\n          console.log(\"reactSpawn\")\r\n\r\n          //if we are signed in then show us the new player\r\n             gameDispatch({type : \"ADD_NEW_PLAYER\", newPlayer})\r\n        })\r\n\r\n        //if a player diconnects or signs out\r\n        Socket.on(\"disconnectFromReact\", (removedPlayer)=>{\r\n          console.log(\"in disconnectFromReact\",removedPlayer)\r\n           //remove the dsiconnected player\r\n           // getting called twice for some reason \r\n           if(!game.isDuplicate){\r\n              gameDispatch({type : \"REMOVE_PLAYER\", removedPlayerID: removedPlayer})\r\n           }\r\n           \r\n       })\r\n        return  () =>{\r\n          console.log(\"in return\")\r\n           gameDispatch({type : \"CLEAR_ALL_PLAYERS\"})\r\n          Socket.close()\r\n        }\r\n      } \r\n    },[])\r\n    \r\n    if(ready){\r\n      return (\r\n        game.isDuplicate ?\r\n              <div>Looks like you have this opened in anoyher tab try closing and refreshing the page</div>                             \r\n            :     \r\n            <GamePlayer game={config.MULTIPLAYER_GAME_URL}/>              \r\n      );\r\n    }else {\r\n      return(<div>Loading...</div>)\r\n    }\r\n};\r\n\r\nexport default Game","import React, {useContext,useEffect} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./profile.css\"\r\nconst Profile = () => {\r\n    const {user} = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            console.log(\"no user\")\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n\r\n    if(user.id){\r\n        return ( \r\n            <div>\r\n                <h1>Welcome {user.username}</h1>\r\n                <div>\r\n                    <h2>Completed Challenges</h2>\r\n                    <ul>\r\n                        {user.completedChallenges.map((completedChallenge) => {\r\n                           return <li className=\"challenges\" key={completedChallenge._id}>challenge name: {completedChallenge.challengeName}</li>\r\n                        })}\r\n                    </ul>\r\n                    <h3>Total Tickets: {user.tickets}</h3>\r\n                </div>\r\n            </div>\r\n            );\r\n    }else{\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n \r\nexport default Profile;","import React, {createContext, useState} from 'react';\r\n\r\n\r\nexport const ModalContext = createContext();\r\n\r\n\r\nconst initialState = {isShowModal : false, component:\"\"};\r\n\r\nconst ModalContextProvider = (props) => {\r\n    const [modal, setModal] = useState(initialState)\r\n    \r\n    const openModal = (component) =>{\r\n        setModal({\r\n            isShowModal : true,\r\n            component :  component\r\n        })\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setModal({\r\n            isShowModal : false,\r\n            component : \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modal, openModal,closeModal }}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider\r\n\r\n\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport \"./form.css\"\r\n\r\nconst FormSpinner = ({ loading }) => {\r\n    return loading ? (\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n    ) : null\r\n  }\r\n\r\n  export default FormSpinner","import React from 'react';\r\nimport \"./form.css\"\r\n\r\n\r\nconst Message = ({ status, text }) => {\r\n    return status && status !== 'loading' ? (\r\n      <div className={`message ${status}`}>{text}</div>\r\n    ) : null\r\n}\r\n\r\nexport default Message\r\n\r\n","import React, {useRef,useEffect} from 'react';\r\nimport \"./form.css\"\r\n\r\nconst Field = ({ field, onChange,formValidation}) => {\r\n   const { label, key,validation, ...attributes } = field\r\n    const {register,errors,watch} = formValidation\r\n    // const password = useRef();\r\n    // // incase we need to match passwords\r\n    //   password.current = watch(\"password\",\"scscsc\");\r\n     \r\n    const name = attributes.name\r\n    console.log(attributes)\r\n    return (\r\n      <div>\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        {(() => {\r\n          switch (attributes.type) {\r\n            case  \"email\" : \r\n            return<> \r\n            <input  key={key} type=\"input\" onChange={onChange} {...attributes} ref={register({\r\n                        required: validation.required,\r\n                        pattern: {value:/^\\S+@\\S+\\.\\S+$/ ,message: validation.pattern.message}\r\n                    })}/>\r\n          {errors[name] && <div className=\"invalid-input-message\">{errors[name].message}</div>}\r\n          </>\r\n            case 'textarea':\r\n            return <>\r\n                   <textarea key={key} autoFocus onChange={onChange} {...attributes} ref={register(validation)}/>\r\n                   {errors[name] && <div className=\"invalid-input-message\">{errors[name].message}</div>}\r\n                   </>\r\n            default:\r\n              return<> \r\n              <input  key={key} onChange={onChange} {...attributes} ref={register(validation)}/>\r\n            {errors[name] && <div className=\"invalid-input-message\">{errors[name].message}</div>}\r\n            </>\r\n          }\r\n        })()}\r\n      </React.Fragment>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  export default Field","import React, {useEffect,useState} from 'react';\r\nimport Select from 'react-select'\r\nimport \"./form.css\"\r\n\r\nconst SelectField = ({ field, onChange,currentValue}) => {\r\n    const { label, key, ...attributes } = field\r\n    const [options, setOptions] = useState()\r\n    useEffect(() =>{\r\n      let o = []\r\n      field.options.forEach(option => {\r\n        o.push({value : option[Object.keys(option)[1]], label : option[Object.keys(option)[1]], name : field.name} )\r\n      });\r\n      setOptions(o)\r\n    },[])\r\n   \r\n    return (\r\n      <div>\r\n      <React.Fragment>\r\n        <label>{label}</label>\r\n        {/* the defualt value only sets the label the value part seems to be brokn so i am setting it in te form itself */}\r\n        <Select options={options}  onChange={onChange} defaultValue={{label : currentValue, value : currentValue}}/>\r\n      </React.Fragment>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n  export default SelectField","import React, { useState, useEffect, useCallback,useRef, memo } from 'react'\r\nimport FormSpinner from \"./spinner\"\r\nimport Message from \"./message\"\r\nimport Input from './input';\r\nimport \"./form.css\"\r\nimport config from '../../config';\r\nimport Select from './select';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Form = ({ formName, onSubmit, formResponse, value =\"\"}) => {\r\n  const { handleSubmit, register, errors,watch } = useForm();\r\n\r\n  const [formExists, setFormExist] = useState(true)\r\n  const [firstInputLoad, setFirstInputLoad] = useState(true)\r\n  const [firstSelectLoad, setFirstSelectLoad] = useState(true)\r\n\r\n  const [form, setForm] = useState({\r\n    config : {},\r\n    fields : []\r\n  })\r\n  const getForm = async () =>{\r\n    const res = await fetch(`${config.API_URL}/form/getform/?formName=${formName}`)\r\n    if(res.status == 404){\r\n      setFormExist(false)\r\n    }else{\r\n      const formData = await res.json()\r\n      setForm({\r\n        fields : formData.fields.map(field => ({\r\n          ...field,\r\n          name: field.name || field.label,\r\n          value: ''\r\n        })),\r\n        config : formData.config\r\n      })\r\n    }\r\n  }\r\n  useEffect(() =>{\r\n    getForm()\r\n  },[])\r\n\r\n    const fieldsRef = useRef()\r\n    const updateFields = (name, value) => {\r\n      const newFields = form.fields.map(field => {\r\n        return field.name === name ? { ...field, value } : field\r\n      })\r\n      setForm(prevState => ({\r\n        ...prevState,\r\n        fields : newFields\r\n      }))\r\n    }\r\n  \r\n    useEffect(() => {\r\n      fieldsRef.current = updateFields\r\n    })\r\n  \r\n    useEffect(() => {\r\n      if (formResponse.status === 'success') {\r\n        setForm(prevState => ({\r\n          ...prevState,\r\n          feilds : form.fields.map(field => ({ ...field, value: '' }))\r\n         }))\r\n      }\r\n    }, [formResponse.status, form.fields])\r\n  \r\n    const handleChange = useCallback(e => {\r\n      const name = e.target.getAttribute('name')\r\n      const value = e.target.type == \"checkbox\" ? e.target.checked : e.target.value\r\n      const update = () => {\r\n        fieldsRef.current(name, value)\r\n      }\r\n  \r\n      update()\r\n    }, [])\r\n\r\n    const handleSelectChange = useCallback(e => {\r\n      const update = () => {\r\n        fieldsRef.current(e.name, e.value)\r\n      }\r\n  \r\n      update()\r\n    }, [])\r\n  \r\n    const setInitialInputValues = (field) =>{\r\n      setFirstInputLoad(false)\r\n        if(field.type == \"checkbox\"){\r\n            field.defaultChecked = value[field.name]\r\n            field.value = value[field.name]\r\n        }else{\r\n          field.value = value[field.name]\r\n        }\r\n        return field\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n      const formData = form.fields.reduce((fields, field) => {\r\n        return { ...fields, [field.name]: field.value }\r\n      }, {})\r\n      onSubmit(formData)\r\n    }\r\n  \r\n    const { spinner } = form.config\r\n    if(formExists){\r\n      return (\r\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n          {form.fields.map(field => {\r\n            if(field.type == \"select\"){\r\n              if(firstSelectLoad && value != \"\"){\r\n                setFirstSelectLoad(false)\r\n                field.value = value[field.name]\r\n            }    \r\n             return <Select key={field.name} field={field} onChange={handleSelectChange} currentValue={value[field.name]}/>\r\n            }else{\r\n               // get initial field value if there is one\r\n              if(firstInputLoad && value != \"\"){\r\n                field = setInitialInputValues(field)\r\n              }     \r\n               return <Input key={field.name} field={field} onChange={handleChange}  formValidation={{register, errors,watch}}/>\r\n            }\r\n       })}\r\n          \r\n          <div className=\"form-bottom\">\r\n            <button disabled={formResponse.status === 'success'} type=\"submit\">\r\n              {form.config.buttonText}\r\n            </button>\r\n            <FormSpinner loading={formResponse.status === 'loading' && spinner} />\r\n          </div>\r\n          <Message status={formResponse.status} text={formResponse.message} />\r\n        </form>\r\n      )\r\n    }else{\r\n      return <div>Whoops cant find that form</div>\r\n    }\r\n \r\n  }\r\n\r\nexport default Form;","import React,{useState,useContext} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Form from '../Form/form';\r\n const Login = () => {\r\n    const [formResponse, setFormResponse] = useState({\r\n        status : '',\r\n        message : ''\r\n    })\r\n\r\n    const {login} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n    \r\n\r\n    const handleSubmit = async (data) =>{\r\n\r\n        setFormResponse({\r\n            status : 'loading',\r\n            message : ''\r\n        })\r\n\r\n        const res = await login(data)\r\n        if(res == \"success\"){\r\n            closeModal();\r\n        }else{\r\n           // setMessage(res)\r\n            setFormResponse({\r\n                status : 'error',\r\n                message : res\r\n            })\r\n             setTimeout(() =>{\r\n                setFormResponse({\r\n                    status : '',\r\n                    message : ''   \r\n                })\r\n             }, 3000)\r\n       }\r\n    }\r\n    \r\n\r\n    return ( \r\n        <Form formName=\"login-en\" onSubmit={handleSubmit} formResponse={formResponse}/>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useContext} from 'react';\r\nimport \"./gameDetails.css\"\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Login from '../Login/login';\r\n\r\n\r\nconst GameDetails = ({title, details,gameType, gameName,gamePath}) => {\r\n    const {user} = useContext(UserContext)\r\n    const {openModal} = useContext(ModalContext)\r\n    const history = useHistory()\r\n    const toGame = () =>{\r\n        history.push({\r\n                pathname : `${gameType}`,\r\n                state:  {gameName, gamePath} \r\n               \r\n            })   \r\n    }\r\n\r\n    return ( \r\n        <div className=\"game-details\">\r\n            <div className=\"game-details-image-container\">\r\n                <img src=\"https://images.unsplash.com/photo-1589289959525-b5b685332c7f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80\" alt=\"none\"/>\r\n            </div>\r\n\r\n            <div className=\"game-details-content\">\r\n                <p className=\"game-details-title text-medium\">\r\n                   {title}\r\n                </p>\r\n                <div className=\"game-details-info\">\r\n                    <p className=\"text-medium\">{details}</p>\r\n                   {user.id ? \r\n                   <p className=\"game-details-play text-medium\" onClick={() => toGame()}>Play</p> :\r\n                   <p className=\"game-details-play text-medium\" onClick={() => openModal(Login)}>Log In to Play</p>\r\n                   }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameDetails;","import React from 'react';\r\nimport GameDetails from \"../GameDetails/gameDetails\"\r\nimport \"./gameList.css\"\r\n\r\nconst GameList = () => {\r\n\r\n    const games = []\r\n\r\n    return ( \r\n            <div className=\"game-list-container\">\r\n                <section className=\"game-list\">\r\n                   \r\n                        <GameDetails title=\"online game\" details=\"its a mulitplayer game\" gameType=\"/mulitPlayerGame\" gameType=\"/mulitPlayerGame\" gameName=\"onlineGame\"/>\r\n                        <GameDetails title=\"Stick game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/stickGame\" gameName=\"stick adventure demo\"/>\r\n                        <GameDetails title=\"Cube game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/cubeGame\" gameName=\"Cube Game Demo\"/>\r\n                        \r\n              \r\n                    \r\n                </section>\r\n            </div>\r\n        \r\n      \r\n     );\r\n}\r\n \r\nexport default GameList;","import React from 'react';\r\nimport GameList from \"../GameList/gameList\"\r\nimport \"./home.css\"\r\n\r\nconst Home = () => {\r\n\r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"top-section\">\r\n        < h1>Select a Game</h1>\r\n        </div>\r\n        <div className=\"game-list-section\">\r\n        <GameList/>\r\n        </div>\r\n      </div>\r\n      \r\n     );\r\n}\r\n \r\nexport default Home;","import React,{useState,useContext, useRef} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./signup.css\"\r\n\r\nconst Signup = () => {\r\n    const {signup} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n    const { handleSubmit, register, errors,watch } = useForm();\r\n    const [showErrorMessage, setShowErrorMessage] = useState({\r\n        message : \"\",\r\n        class : \"hide\"\r\n    })\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const onSubmit = async (values) =>{\r\n        const res = await signup(values)\r\n        if(res == \"success\"){\r\n            closeModal();\r\n        }else{\r\n            setShowErrorMessage({\r\n                message : res,\r\n                class: \"show\"\r\n            })\r\n             setTimeout(() =>{\r\n                setShowErrorMessage(prevState =>({\r\n                    ...prevState,\r\n                    class: \"hide\"\r\n                }))\r\n             }, 3000)\r\n       }\r\n    } \r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input  className=\"form-control\" id=\"\"name=\"username\" type=\"text\" placeholder=\"please enter a username\" \r\n                    ref={register({\r\n                        required: \"please enter a username\",\r\n                        minLength : {value : 5,message : \"username must have at least 5 characters\"}, \r\n                    })}\r\n                   />\r\n            {errors.username && <div className=\"invalid-input-message\">{errors.username.message}</div>}\r\n\r\n            <input className=\"form-control\" name=\"email\" type=\"email\" placeholder=\"please enter a email\" \r\n                    ref={register({\r\n                        required: \"please enter a valid email address\",\r\n                        pattern: {value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message: \"invalid email address\"}\r\n                    })}\r\n                   />            \r\n            {errors.email && <div className=\"invalid-input-message\">{errors.email.message}</div>}\r\n\r\n            <input className=\"form-control\" name=\"password\" type=\"password\" placeholder=\"please enter a password\" \r\n                    ref={register({\r\n                        required: \"this is required\",\r\n                        minLength : {value : 5,message : \"Password must have at least 5 characters\"},\r\n                    })}\r\n                   />\r\n            {errors.password && <div className=\"invalid-input-message\">{errors.password.message}</div>}\r\n\r\n\r\n            <input className=\"form-control\" name=\"password_repeat\" type=\"password\" placeholder=\"please confirm pasword\" \r\n                    ref={register({\r\n                        validate: value => value === password.current || \"The passwords do not match\"  \r\n                })}\r\n                />\r\n            {errors.password_repeat && <div className=\"invalid-input-message\">{errors.password_repeat.message}</div>}\r\n\r\n            <input  className=\"form-control btn btn-primary\"  type=\"submit\" value=\"Sign up\"/>\r\n            <div className=\"error-message-container\">\r\n                <div className={\"error-message \" +  showErrorMessage.class}>{showErrorMessage.message}</div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Signup;","import React, {useContext,useState, useEffect} from 'react';\r\nimport Login from \"../Login/login\"\r\nimport Signup from \"../Signup/signup\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"./navbar.css\"\r\nimport Logo from \"./logo.png\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport {UserContext} from '../../contexts/userContext';\r\n\r\n\r\nconst Navbar = () => {\r\n  const {openModal} = useContext(ModalContext)\r\n  const {user, signout} = useContext(UserContext)\r\n\r\n\r\n    return ( \r\n        <header>\r\n          <Link  className=\"logo-container\" to=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Logo\" />\r\n          </Link>\r\n          <nav>     \r\n              { user.id ? \r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => signout()}><a/>Signout</li>\r\n                    <li> <Link to=\"/profile\">Profile</Link></li>\r\n                  </ul>\r\n                  :\r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => openModal(Signup)}><a/>Sign Up</li>\r\n                    <li onClick={() => openModal(Login)}><a/>Login</li>\r\n                  </ul>\r\n              }\r\n            \r\n          </nav>\r\n          {/* <a className=\"cta\"><button>Contact</button></a> */}\r\n      </header> \r\n     );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext,useEffect,useState} from 'react';\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Modal from \"react-modal\";\r\nimport \"./modal.css\"\r\n\r\nModal.setAppElement('#root')\r\nconst CModal = () => {\r\n    const {modal, closeModal} = useContext(ModalContext)     \r\n    return ( \r\n        <div>      \r\n             \r\n            <Modal \r\n            style={{overlay :{borderColor: \"grey\"},content : {\r\n  \r\n                height:\"fit-content\",\r\n                width: \"fit-content\",\r\n                position : \"fixed\",\r\n                margin: \"5% auto\",\r\n                left: \"0\",\r\n                right: \"0\",\r\n                padding : \"15px\",\r\n                zIndex: \"99999\"\r\n\r\n             } \r\n            }} \r\n            isOpen={modal.isShowModal}\r\n            onRequestClose={() => closeModal() }\r\n            >\r\n                <div className=\"close-button-container\">\r\n                 <div className=\"close-button\" onClick={() => closeModal()}>X</div>\r\n                </div>\r\n                <React.Fragment>\r\n             {modal.component != \"\" ? <modal.component/> : <></>}\r\n              </React.Fragment>\r\n               \r\n            </Modal>\r\n        </div> \r\n     ) \r\n}\r\n \r\nexport default CModal;","import React, {createContext, useState} from 'react';\r\nimport config from \"../config\"\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n\r\nexport const AdminContext = createContext();\r\n\r\n\r\nconst initialTable = {\r\n        entityType : \"user\",\r\n        headers : [],\r\n        rows : [],\r\n        totalCount : 0,\r\n        isLoading : true,\r\n        exclude : []\r\n}\r\n\r\nconst initialFilter = {\r\n    dropdown : [],\r\n    field : \"_id\",\r\n    value : \"\"\r\n}\r\n\r\nconst initialPagination = {\r\n    buttons : [],\r\n    skip : 0,\r\n    limit : 10\r\n}\r\n\r\nconst AdminContextProvider = (props) => {\r\n    \r\n    const [table, setTable] = useState(initialTable)\r\n    const [filter, setFilter] = useState(initialFilter)\r\n    const [pagination, setPagination] = useState(initialPagination)\r\n\r\n\r\n    //called in use effect\r\n    const setNewTable = async () =>{\r\n        setIsLoading(true)\r\n        const res =  await fetch(`${config.API_URL}/${table.entityType}/adminget${table.entityType}s/?skip=${pagination.skip}&limit=${pagination.limit}&field=${filter.field}&value=${filter.value}`, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n          });\r\n        const tableData = await res.json()\r\n        console.log(tableData)\r\n        setIsLoading(false)\r\n        if(res.status == 200){\r\n            const tableRows = tableData.entities ? tableData.entities : tableData.headers\r\n            const headers = Object.keys(tableRows[0])\r\n            setTable(prevState => ({\r\n                    entityType : prevState.entityType,\r\n                    // if we got back data and not just field names set rows\r\n                    rows :   tableData.entities ? tableData.entities : [],\r\n                    headers : headers,\r\n                    totalCount : tableData.totalCount,\r\n                    isLoading: prevState.isLoading,\r\n                    exclude : tableData.exclude\r\n            }))\r\n        }        \r\n    }\r\n    const setIsLoading = (isLoading) =>{\r\n        setTable(prevState => ({\r\n            ...prevState,\r\n            isLoading : isLoading\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <AdminContext.Provider value={{table,setTable,setNewTable, filter, setFilter, pagination, setPagination}}>\r\n            {props.children}\r\n        </AdminContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AdminContextProvider\r\n\r\n\r\n","import React, {useContext, useEffect} from 'react';\r\nimport {Form} from 'react-bootstrap'\r\nimport { AdminContext } from '../../contexts/adminContext';\r\n\r\nconst AdminSearch = () => {\r\n    const {filter, setFilter, table,setNewTable} = useContext(AdminContext)\r\n\r\n    const setDropdown = async () =>{\r\n        let items = []\r\n        table.headers.forEach((header) =>{\r\n        items.push(<option key={header}>{header}</option>)\r\n        })\r\n        setFilter(prevState => ({\r\n            field : prevState.field,\r\n            value : prevState.value,\r\n            dropdown : items\r\n        }))\r\n    }\r\n\r\n    const setSearchField = (field) =>{\r\n        setFilter(prevState => ({\r\n            dropdown :  prevState.dropdown,\r\n            value : prevState.value,\r\n            field : field\r\n        }))\r\n    }\r\n\r\n    const setSearchValue = (value) => {\r\n        setFilter(prevState => ({\r\n            dropdown : prevState.dropdown,\r\n            value : value,\r\n            field : prevState.field\r\n        }))\r\n    }\r\n\r\n    // get new dropdown options when changing table headers\r\n    useEffect(() =>{\r\n            setDropdown()\r\n    }, [table.headers])\r\n    \r\n    return ( \r\n        <div className=\"search-container\">\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n            <Form.Label>Search By</Form.Label>\r\n                <Form.Control as=\"select\" custom onChange={e =>setSearchField(e.target.value)}>\r\n                    {filter.dropdown}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        <div className=\"input-group mb-3\">\r\n            <input type=\"text\" className=\"form-control\" value={filter.value} onChange={(e) => setSearchValue(e.target.value)}/>\r\n                <div className=\"input-group\">\r\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={() => setNewTable()}>Button</button>\r\n        </div>\r\n      </div>\r\n  </div>\r\n     );\r\n}\r\n \r\nexport default AdminSearch;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { AdminContext } from '../../contexts/adminContext';\r\n\r\nconst AdminPagination = () => {\r\n    const {pagination, setPagination, table,setNewTable, } = useContext(AdminContext)\r\n\r\n    /// this. will not change table.total count\r\n    const paginate = (skip) =>{\r\n        setPagination(prevState => ({\r\n            limit : prevState.limit,\r\n            buttons : prevState.buttons,\r\n            skip : skip\r\n        }))\r\n    }\r\n\r\n    // this. will not change table.total count\r\n    const setNewPagination = () =>{\r\n        let items = []\r\n        for (let number = pagination.skip + 1; number <= Math.ceil(table.totalCount / pagination.limit); number ++) {\r\n            const paginateItem = (number - 1) * pagination.limit\r\n            items.push(\r\n              <Pagination.Item key={number} onClick={() => paginate(paginateItem)} >\r\n                {number}\r\n              </Pagination.Item>\r\n            );    \r\n    }\r\n    \r\n    setPagination({\r\n            skip : 0,\r\n            limit : 10,\r\n            buttons : items\r\n        })\r\n    }\r\n\r\n    //this runs when someone searches or changes tabs NOT always when setNewTable() is called\r\n    useEffect(() =>{\r\n\r\n        setNewPagination()\r\n       \r\n    }, [table.totalCount,table.entityType])\r\n\r\n    return ( \r\n        <div>\r\n            <Pagination>\r\n                {pagination.buttons}\r\n            </Pagination>\r\n        <p>showing entries {pagination.skip} to {pagination.skip + table.rows.length} out of {table.totalCount}</p>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default AdminPagination;","import React, {useState, useContext} from 'react';\r\nimport Form from '../Form/form';\r\nimport config from \"../../config\"\r\nimport { AdminContext } from '../../contexts/adminContext';\r\n\r\n\r\n\r\nconst AdminEdit = (props) => {\r\n    console.log(props)\r\n    const errorStatus = [\"404\",\"500\",\"401\"] \r\n    const {table, setTable} = useContext(AdminContext)\r\n\r\n    const [formResponse, setFormResponse] = useState({\r\n        status : '',\r\n        message : ''\r\n    })\r\n\r\n    const validateResponse = async (res) =>{\r\n        console.log(res)\r\n        if(errorStatus.includes(res.status.toString())){\r\n            console.log(\" in error\")\r\n          return await res.text()\r\n        }else{\r\n            const newEntity = await res.json()\r\n            const updatedRows = table.rows.map((row) =>{\r\n                console.log(row)\r\n                if(row._id == newEntity._id){    \r\n                    return row = newEntity\r\n                } else{\r\n                    return row\r\n                }\r\n            })\r\n            console.log(updatedRows)\r\n            setTable(prevState =>({\r\n                ...prevState,\r\n                rows : updatedRows\r\n            }))\r\n          return(\"success\")\r\n        }\r\n      }\r\n\r\n    const handleSubmit = async (data) =>{\r\n        console.log(data)\r\n        //we dont get the id from the form so we set it here\r\n        data._id = props._id\r\n        setFormResponse({\r\n            status : 'loading',\r\n            message : ''\r\n        })\r\n\r\n        const res =  await fetch(`${config.API_URL}/${table.entityType}/adminupdate${table.entityType}`, {\r\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n          });\r\n\r\n          const response = await validateResponse(res)\r\n          console.log(response)\r\n          if(response == \"success\"){\r\n            setFormResponse({\r\n                status : 'success',\r\n                message : \"Entity Updated\"\r\n            })\r\n        }else{\r\n           // setMessage(res)\r\n            setFormResponse({\r\n                status : 'error',\r\n                message : response\r\n            })\r\n       }\r\n    }\r\n    return ( \r\n        <Form formName={`update${table.entityType}-en`} onSubmit={handleSubmit} formResponse={formResponse} value={props}/>\r\n     );\r\n}\r\n \r\nexport default AdminEdit;","import React, {useContext} from 'react';\r\nimport { AdminContext } from '../../contexts/adminContext';\r\nimport {Table, Spinner} from 'react-bootstrap'\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport AdminEdit from './adminEdit';\r\nimport \"./admin.css\"\r\n\r\nconst AdminTable = (props) => {\r\n    const {table} = useContext(AdminContext)\r\n    const {openModal} = useContext(ModalContext)\r\n\r\n    if(!table.isLoading){\r\n        return (        \r\n            <Table striped bordered hover>\r\n                <thead>\r\n                        <tr>\r\n                            {props.tableHeaders.map((th, index) =>{\r\n                                if(!table.exclude.includes(th))\r\n                                return <th key={index}>{th}</th>\r\n                            })}\r\n                            \r\n                        </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.tableRows.map((tr, index) =>{         \r\n                        return <tr key={index} >{Object.keys(tr).map((td,index) =>{\r\n                            if(!table.exclude.includes(Object.keys(tr)[index])){\r\n                                return <td key={index}>{tr[td].toString()}</td>  \r\n                            }                                      \r\n                        })}\r\n                        <td className=\"btn-primary table-row\" onClick={() => openModal(() => AdminEdit(tr))}><i className=\"fa fa-edit\"></i></td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n         );\r\n    }else{\r\n        return <>\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n        <Spinner animation=\"border\" variant=\"secondary\" />\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n        <Spinner animation=\"border\" variant=\"danger\" />\r\n        <Spinner animation=\"border\" variant=\"warning\" />\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n        <Spinner animation=\"border\" variant=\"light\" />\r\n        <Spinner animation=\"border\" variant=\"dark\" />\r\n        <Spinner animation=\"grow\" variant=\"primary\" />\r\n        <Spinner animation=\"grow\" variant=\"secondary\" />\r\n        <Spinner animation=\"grow\" variant=\"success\" />\r\n        <Spinner animation=\"grow\" variant=\"danger\" />\r\n        <Spinner animation=\"grow\" variant=\"warning\" />\r\n        <Spinner animation=\"grow\" variant=\"info\" />\r\n        <Spinner animation=\"grow\" variant=\"light\" />\r\n        <Spinner animation=\"grow\" variant=\"dark\" />\r\n      </>\r\n    }\r\n\r\n}\r\n \r\nexport default AdminTable;","import React, {useContext} from 'react';\r\nimport AdminTable from './adminTable';\r\nimport { AdminContext } from '../../contexts/adminContext';\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nconst AdminTabs = () => {\r\n    const {table,setTable,setFilter} = useContext(AdminContext)\r\n\r\n    const setNewtableEntity = (entityType)=>{\r\n        resetSearchValue()\r\n        setTable(prevState => ({\r\n            entityType : entityType,\r\n            headers : prevState.headers,\r\n            rows : prevState.rows,\r\n            totalCount : prevState.totalCount,\r\n            isLoading : prevState.isLoading,\r\n            exclude : prevState.exclude\r\n        }))\r\n    }\r\n\r\n    const resetSearchValue = () => {\r\n        setFilter(prevState => ({\r\n            dropdown : prevState.dropdown,\r\n            value : \"\",\r\n            field : prevState.field\r\n        }))\r\n    }\r\n\r\n    return (  \r\n        <Tabs activeKey={table.entityType} onSelect={(e) => setNewtableEntity(e)} >\r\n                \r\n        <Tab eventKey=\"challenge\" title=\"challenges\">\r\n             <AdminTable tableHeaders={table.headers} tableRows={table.rows}/> \r\n        </Tab>\r\n        <Tab eventKey=\"user\" title=\"users\">\r\n        <AdminTable tableHeaders={table.headers} tableRows={table.rows}/>\r\n        </Tab>\r\n        <Tab eventKey=\"game\" title=\"games\">\r\n       \r\n        <AdminTable tableHeaders={table.headers} tableRows={table.rows}/>\r\n        </Tab>\r\n    </Tabs>\r\n    );\r\n}\r\n \r\nexport default AdminTabs;","import React, {useState, useContext} from 'react';\r\nimport Form from '../Form/form';\r\nimport config from \"../../config\"\r\nimport { AdminContext } from '../../contexts/adminContext';\r\n\r\n\r\n\r\nconst AdminCreate = () => {\r\n    const errorStatus = [\"404\",\"500\",\"401\"] \r\n    const {table, setTable} = useContext(AdminContext)\r\n\r\n    const [formResponse, setFormResponse] = useState({\r\n        status : '',\r\n        message : ''\r\n    })\r\n\r\n    const validateResponse = async (res) =>{\r\n        console.log(res)\r\n        if(errorStatus.includes(res.status.toString())){\r\n            console.log(\" in error\")\r\n          return await res.text()\r\n        }else{\r\n            const newEntity = await res.json()\r\n            console.log(newEntity)\r\n            setTable(prevState =>({\r\n                ...prevState,\r\n                totalCount : prevState.totalCount + 1,\r\n                rows : [...prevState.rows,newEntity]\r\n            }))\r\n          return(\"success\")\r\n        }\r\n      }\r\n\r\n    const handleSubmit = async (data) =>{\r\n        setFormResponse({\r\n            status : 'loading',\r\n            message : ''\r\n        })\r\n\r\n        const res =  await fetch(`${config.API_URL}/${table.entityType}/create${table.entityType}`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n          });\r\n\r\n          const response = await validateResponse(res)\r\n          console.log(response)\r\n          if(response == \"success\"){\r\n            setFormResponse({\r\n                status : 'success',\r\n                message : \"Entity created\"\r\n            })\r\n        }else{\r\n           // setMessage(res)\r\n            setFormResponse({\r\n                status : 'error',\r\n                message : response\r\n            })\r\n       }\r\n    }\r\n    return ( \r\n        <Form formName={`create${table.entityType}-en`} onSubmit={handleSubmit} formResponse={formResponse}/>\r\n     );\r\n}\r\n \r\nexport default AdminCreate;","import React, {useEffect, useContext} from 'react';\r\nimport { AdminContext } from '../../contexts/adminContext';\r\nimport AdminSearch from \"./adminSearch\"\r\nimport AdminPagination from './adminPagination';\r\nimport AdminTabs from './adminTabs';\r\nimport AdminCreate from './adminCreate';\r\nimport {ModalContext} from '../../contexts/modalContext';\r\n\r\nconst Admin = () => {\r\n    const {table,setNewTable,pagination} = useContext(AdminContext)\r\n    const {openModal} = useContext(ModalContext)\r\n\r\n    // set table for first time\r\n    useEffect(() =>{\r\n        setNewTable()\r\n    },[table.entityType])\r\n\r\n    useEffect(() =>{\r\n        setNewTable()\r\n    },[pagination.skip])\r\n\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n            <AdminSearch/>\r\n            <button onClick={() => openModal(AdminCreate)}>Create new {table.entityType}</button>\r\n           <AdminTabs/>\r\n            <AdminPagination/>\r\n            </div>\r\n         );\r\n}\r\n \r\nexport default Admin;","import React from 'react';\nimport SinglePlayerGame from \"./components/SinglePlayerGame/singlePlayerGame\"\nimport MultiPlayerGame from \"./components/MultiPlayerGame/multiPlayerGame\"\nimport Profile from './components/Profile/profile';\nimport { ToastProvider } from 'react-toast-notifications'\nimport Home from \"./components/Home/home\"\nimport Navbar from \"./components/Navbar/navbar\"\nimport GameContextProvider from './contexts/gameContext';\nimport UserContextProvider from './contexts/userContext';\nimport ModalContextProvider from './contexts/modalContext';\nimport { BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport CModal from './components/Modal/Modal';\nimport config from \"./config\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Admin from './components/Admin/admin';\nimport AdminContextProvider from './contexts/adminContext';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      <ToastProvider autoDismissTimeout={3000}>\n        <ModalContextProvider>\n          <AdminContextProvider>\n        <UserContextProvider>\n        <GameContextProvider>\n          <Navbar/> \n          <CModal/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/mulitPlayerGame\" exact  component={MultiPlayerGame}/>   \n              <Route path=\"/singlePlayerGame\"  component={SinglePlayerGame}/>  \n              <Route path=\"/profile\"  exact component={Profile}/>    \n              <Route path=\"/admin\"  exact component={Admin}/>   \n              <Route component={Home}/>  \n            </Switch>\n             \n        </GameContextProvider>\n        </UserContextProvider>\n        </AdminContextProvider>\n        </ModalContextProvider>\n        </ToastProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3fa434f6.png\";"],"sourceRoot":""}