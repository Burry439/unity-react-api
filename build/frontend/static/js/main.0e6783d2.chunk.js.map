{"version":3,"sources":["config.js","contexts/userContext.js","components/GamePlayer/gamePlayer.js","components/SinglePlayerGame/singlePlayerGame.js","reducers/gameReducer.js","contexts/gameContext.js","components/MultiPlayerGame/multiPlayerGame.js","components/Profile/profile.js","contexts/modalContext.js","components/Login/login.js","components/GameDetails/gameDetails.js","components/GameList/gameList.js","components/Home/home.js","components/Signup/signup.js","components/Navbar/navbar.js","components/Modal/Modal.js","components/Admin/adminTable.js","components/Admin/admin.js","App.js","serviceWorker.js","index.js","components/Navbar/logo.png"],"names":["config","API_URL","MULTIPLAYER_GAME_URL","SINGLEPLAYER_GAME_URL","UserContext","createContext","initialState","id","username","accessToken","challenges","tickets","UserContextProvider","props","useState","JSON","parse","localStorage","getItem","user","setUser","setUserInfo","userData","console","log","undefined","_id","completedChallenges","removeItem","setItem","stringify","validateResponse","res","a","status","text","json","response","login","fetch","method","headers","body","signup","Provider","value","signout","children","UnityPlayer","game","history","useHistory","useContext","useEffect","push","className","src","SinglePlayerGame","Socket","location","state","gamePath","gameUrl","gameName","replace","ready","setReady","isDuplicate","setIsDuplicate","addToast","useToasts","io","on","emit","userId","challenge","reward","challengeName","appearance","close","gameReducer","action","type","playerId","data","thisPlayerId","allPlayers","newPlayer","filter","player","removedPlayerID","GameContext","GameContextProvider","useReducer","gameDispatch","Game","removedPlayer","Profile","map","key","ModalContext","isShowModal","component","ModalContextProvider","modal","setModal","openModal","closeModal","Login","useForm","handleSubmit","register","message","class","showErrorMessage","setShowErrorMessage","onSubmit","setTimeout","prevState","name","placeholder","ref","GameDetails","title","details","gameType","alt","onClick","pathname","GameList","Home","Signup","errors","watch","password","useRef","current","values","required","minLength","pattern","email","validate","password_repeat","Navbar","to","Logo","Modal","setAppElement","CModal","style","overlay","borderColor","content","height","width","position","margin","left","right","padding","isOpen","onRequestClose","Fragment","AdminTable","Table","striped","bordered","hover","tableHeaders","th","tableRows","tr","index","Object","keys","td","toString","Admin","rows","table","setTable","sortTable","tables","setNewTable","entityType","tableData","Tabs","defaultActiveKey","Tab","eventKey","onSelect","App","autoDismissTimeout","path","exact","MultiPlayerGame","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.0e6783d2.chunk.js","sourcesContent":["const dev = {\r\n    API_URL : \"http://localhost:8080\",\r\n    MULTIPLAYER_GAME_URL : \"http://localhost:7000\",\r\n    SINGLEPLAYER_GAME_URL : \"http://localhost:8000\"\r\n  };\r\n  \r\n  const prod = {\r\n    API_URL : \"https://unity-react-games.herokuapp.com\",\r\n    MULTIPLAYER_GAME_URL : \"https://online-game-iframe.herokuapp.com\",\r\n    SINGLEPLAYER_GAME_URL : \"https://single-player-games-iframe.herokuapp.com\"\r\n  };\r\n  \r\n  const config = process.env.NODE_ENV  === 'production'\r\n    ? prod\r\n    : dev;\r\n  \r\n  export default {\r\n    ...config\r\n  };","import React, {createContext, useState} from 'react';\r\nimport { userReducer } from '../reducers/userReducer';\r\nimport config from \"../config\"\r\n\r\nexport const UserContext = createContext();\r\n\r\n\r\nconst initialState =  \r\n{\r\n  id : null,\r\n  username : \"\",\r\n  accessToken : \"\",\r\n  challenges: null,\r\n  tickets : null\r\n};\r\n\r\nconst UserContextProvider = (props) => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"jwt\")) || initialState)\r\n    \r\n  const setUserInfo = (userData) => {\r\n    console.log(userData)\r\n    //fix _id problem\r\n    const id = userData._id == undefined ? userData.id : userData._id\r\n    const user = {\r\n      id : id,\r\n      username : userData.username,\r\n      accessToken : userData.accessToken,\r\n      challenges: userData.completedChallenges,\r\n      tickets : userData.tickets\r\n    }\r\n    localStorage.removeItem(\"jwt\")\r\n    localStorage.setItem(\"jwt\", JSON.stringify(user))\r\n    setUser(user)\r\n  }\r\n\r\n  const signout = () =>{\r\n      localStorage.removeItem(\"jwt\")\r\n      setUser(initialState)\r\n    }\r\n\r\n  const validateResponse = async (res) =>{\r\n    if(res.status === (404 || 500)){\r\n      console.log(\"here\")\r\n      return await res.text()\r\n    }else{\r\n      const response = await res.json()\r\n      setUserInfo(response.user)\r\n      return(\"success\")\r\n    }\r\n  }\r\n\r\n    const login  = async (userData) => {\r\n        const res =  await fetch(`${config.API_URL}/users/login`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n          });\r\n          return await validateResponse(res)\r\n    }\r\n\r\n    const signup = async (userData) =>{\r\n      const res =  await fetch(`${config.API_URL}/users/signup`, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData) // body data type must match \"Content-Type\" header\r\n        });\r\n        return await validateResponse(res)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <UserContext.Provider value={{user, login,signout,signup, setUserInfo}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;\r\n\r\n\r\n\r\n\r\n// example of access token for later\r\n\r\n  //   const test = async () =>{\r\n  //     const res =  await fetch(`${config.API_URL}/users/test`, {\r\n  //         method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n  //         headers: {\r\n  //           'Authorization' : `Bearer ${user.accessToken}` ,\r\n  //           'Content-Type': 'application/json'\r\n  //         },\r\n        \r\n  //       });\r\n  //       const response = await res.json()\r\n  //       console.log(response)\r\n  // }\r\n","import React, {useEffect, useContext} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport \"./gamePlayer.css\"\r\nconst UnityPlayer = ({game}) => {\r\n    const history = useHistory()\r\n    const {user} = useContext(UserContext)\r\n    console.log(game)\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n \r\n    return ( \r\n        <div id=\"unity-body\">\r\n            <iframe className=\"unity-player\"  src={game} ></iframe>\r\n      </div>\r\n                \r\n        \r\n     );\r\n}\r\n \r\nexport default UnityPlayer;","import React, {useEffect,useContext,useState} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport GamePlayer from '../GamePlayer/gamePlayer';\r\nimport config from \"../../config\"\r\nimport io from \"socket.io-client\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst SinglePlayerGame = (props) => {\r\n    let Socket = null\r\n    console.log(props.location.state.gamePath)\r\n    const gamePath = props.location.state.gamePath;\r\n    const gameUrl = config.SINGLEPLAYER_GAME_URL\r\n    const gameName = gamePath.replace(/\\//g, '');\r\n    const {user, setUserInfo} = useContext(UserContext)\r\n    const [ready, setReady] = useState(false)\r\n    const [isDuplicate, setIsDuplicate] = useState(false)\r\n    const { addToast } = useToasts()\r\n\r\n\r\n    useEffect(() =>{\r\n        Socket = io(config.SINGLEPLAYER_GAME_URL); \r\n        console.log(\"config.SINGLEPLAYER_GAME_URL \", config.SINGLEPLAYER_GAME_URL)\r\n        console.log(\"gameUrl \", gameUrl)\r\n\r\n            if(Socket){\r\n                Socket.on(\"connect\", () => {\r\n                    console.log(\"connetion\")\r\n                    Socket.emit(\"ReactConnected\",{userId : user.id, gameName : gameName})\r\n            });\r\n\r\n            Socket.on(\"gameReady\" , () =>{\r\n               setReady(true)\r\n            })\r\n\r\n            Socket.on(\"isDuplicate\" , () =>{\r\n                setIsDuplicate(true)\r\n                setReady(true)\r\n             })\r\n \r\n            Socket.on(\"challengeCompleted\" , (challenge) =>{\r\n                console.log(\"in challenge complete\")\r\n                console.log(challenge)\r\n                user.challenges.push(challenge)\r\n                user.tickets += challenge.reward;\r\n                setUserInfo(user)\r\n                addToast(\"good job you completed challenge: \" + challenge.challengeName, { appearance: 'success' })\r\n            })\r\n\r\n            return () =>{\r\n                console.log(\"in return\")\r\n                Socket.close()\r\n            }\r\n        }\r\n    },[])\r\n\r\n    if(ready){\r\n        return ( \r\n            isDuplicate ? <div>Looks Like YOu Have This Open In another Tab</div> : <GamePlayer game={gameUrl + gamePath + `/?${user.id}` }/>\r\n         );\r\n    } else {\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n \r\n}\r\n \r\nexport default SinglePlayerGame;","export const gameReducer = (state,action) =>{\r\n    switch(action.type){\r\n\r\n        case 'START_GAME':\r\n            console.log(action)\r\n            return {playerId : action.data.thisPlayerId, isDuplicate : false, allPlayers : action.data.allPlayers}\r\n\r\n        case 'SET_PLAYER_AS_DUPLICATE':\r\n            console.log(\"SET_PLAYER_AS_DUPLICATE\", action)\r\n            return {playerId : action.playerId, isDuplicate : true, allPlayers : []}\r\n\r\n        case 'ADD_NEW_PLAYER':\r\n            console.log(\"ADD_NEW_PLAYER\", action)\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate, allPlayers : [...state.allPlayers, action.newPlayer]}\r\n\r\n        case \"REMOVE_PLAYER\":\r\n            console.log(\"REMOVE_PLAYER\", action)\r\n            return {playerId : state.playerId, isDuplicate : state.isDuplicate,  allPlayers : state.allPlayers.filter(player => player.id != action.removedPlayerID)}\r\n\r\n        case \"CLEAR_ALL_PLAYERS\":\r\n            console.log(\"CLEAR_ALL_PLAYERS\", action)\r\n            return {thisPlayerId : \"\", allPlayers: [],isDuplicate : false}\r\n\r\n        case \"SET_ALL_PLAYERS\":\r\n            console.log(\"set all players\", action.allPlayers)\r\n            return {...state, allPlayers : action.allPlayers}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport { gameReducer } from '../reducers/gameReducer';\r\n\r\n\r\nexport const GameContext = createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n    const [game, gameDispatch] = useReducer(gameReducer,{ thisPlayerId : \"\", isDuplicate : false, allPlayers: []})\r\n    \r\n    return(\r\n        <GameContext.Provider value={{game, gameDispatch }}>\r\n            {props.children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GameContextProvider;","import React, {useEffect, useContext,useState} from \"react\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { GameContext } from \"../../contexts/gameContext\";\r\nimport io from \"socket.io-client\";\r\nimport \"./multiPlayerGame.css\"\r\nimport GamePlayer from \"../GamePlayer/gamePlayer\";\r\nimport config from \"../../config\"\r\n\r\nconst Game = (props) => {\r\n\r\n  const {user} = useContext(UserContext)\r\n  const {game,gameDispatch} = useContext(GameContext)\r\n  let Socket = null\r\n  const [ready, setReady] = useState(false)\r\n\r\n    useEffect(() =>{\r\n      console.log(\"in use effect\")\r\n      Socket = io(config.MULTIPLAYER_GAME_URL);  \r\n      if(Socket){\r\n        Socket.on(\"connect\", () => {\r\n          console.log(\"connetion\")\r\n        });\r\n       \r\n        Socket.emit(\"addReactUser\", user);\r\n\r\n        // gets me all players \r\n        Socket.on(\"reactFirstSpawn\", (data) =>{  \r\n          console.log(\"reactFirstSpawn\")\r\n           gameDispatch({type : \"START_GAME\", data})\r\n           setReady(true)\r\n        })\r\n        \r\n        Socket.on(\"duplicatePlayer\", (playerId) =>{\r\n          console.log(\"duplicatePlayer\")\r\n           gameDispatch({type : \"SET_PLAYER_AS_DUPLICATE\", playerId})\r\n           setReady(true)\r\n        })\r\n\r\n        //add new player\r\n        Socket.on(\"reactSpawn\", (newPlayer) =>{\r\n          console.log(\"reactSpawn\")\r\n\r\n          //if we are signed in then show us the new player\r\n             gameDispatch({type : \"ADD_NEW_PLAYER\", newPlayer})\r\n        })\r\n\r\n        //if a player diconnects or signs out\r\n        Socket.on(\"disconnectFromReact\", (removedPlayer)=>{\r\n          console.log(\"in disconnectFromReact\",removedPlayer)\r\n           //remove the dsiconnected player\r\n           // getting called twice for some reason \r\n           if(!game.isDuplicate){\r\n              gameDispatch({type : \"REMOVE_PLAYER\", removedPlayerID: removedPlayer})\r\n           }\r\n           \r\n       })\r\n        return  () =>{\r\n          console.log(\"in return\")\r\n           gameDispatch({type : \"CLEAR_ALL_PLAYERS\"})\r\n          Socket.close()\r\n        }\r\n      } \r\n    },[])\r\n    \r\n    if(ready){\r\n      return (\r\n        game.isDuplicate ?\r\n              <div>Looks like you have this opened in anoyher tab try closing and refreshing the page</div>                             \r\n            :     \r\n            <GamePlayer game={config.MULTIPLAYER_GAME_URL}/>              \r\n      );\r\n    }else {\r\n      return(<div>Loading...</div>)\r\n    }\r\n};\r\n\r\nexport default Game","import React, {useContext,useEffect} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./profile.css\"\r\nconst Profile = () => {\r\n    const {user} = useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        if(!user.id){\r\n            console.log(\"no user\")\r\n            history.push(\"/home\")\r\n        }\r\n    },[user])\r\n\r\n    if(user.id){\r\n        return ( \r\n            <div>\r\n                <h1>Welcome {user.username}</h1>\r\n                <div>\r\n                    <h2>Completed Challenges</h2>\r\n                    <ul>\r\n                        {user.challenges.map((challenge) => {\r\n                           return <li className=\"challenges\" key={challenge._id}>challenge name: {challenge.challengeName}</li>\r\n                        })}\r\n                    </ul>\r\n                    <h3>Total Tickets: {user.tickets}</h3>\r\n                </div>\r\n            </div>\r\n            );\r\n    }else{\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n \r\nexport default Profile;","import React, {createContext, useState} from 'react';\r\n\r\n\r\nexport const ModalContext = createContext();\r\n\r\n\r\nconst initialState = {isShowModal : false, component:\"\"};\r\n\r\nconst ModalContextProvider = (props) => {\r\n    const [modal, setModal] = useState(initialState)\r\n    \r\n    const openModal = (component) =>{\r\n        setModal({\r\n            isShowModal : true,\r\n            component :  component\r\n        })\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setModal({\r\n            isShowModal : false,\r\n            component : \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ModalContext.Provider value={{modal, openModal,closeModal }}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalContextProvider\r\n\r\n\r\n","import React,{useState,useContext} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = () => {\r\n\r\n    const {login} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n    const { handleSubmit,register} = useForm();\r\n    const [showErrorMessage, setShowErrorMessage] = useState({message : \"\",class : \"hide\"})\r\n    const onSubmit = async (data) =>{\r\n        const res = await login(data)\r\n        if(res == \"success\"){\r\n            closeModal();\r\n        }else{\r\n            setShowErrorMessage({\r\n                message : res,\r\n                class: \"show\"\r\n            })\r\n             setTimeout(() =>{\r\n                setShowErrorMessage(prevState =>({\r\n                    ...prevState,\r\n                    class: \"hide\"\r\n                }))\r\n             }, 3000)\r\n       }\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input  className=\"form-control\" id=\"\"name=\"username\" type=\"text\" placeholder=\"please enter a username\" ref={register()}/>\r\n        <input className=\"form-control\" name=\"password\" type=\"password\" placeholder=\"please enter a password\" ref={register()}/>\r\n\r\n        <input  className=\"form-control btn btn-primary\"  type=\"submit\" value=\"Log In\"/>\r\n        <div className=\"error-message-container\">\r\n            <div className={\"error-message \" +  showErrorMessage.class}>{showErrorMessage.message}</div>\r\n        </div>\r\n    </form>\r\n     );\r\n}\r\n \r\nexport default Login;","import React, {useContext} from 'react';\r\nimport \"./gameDetails.css\"\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Login from '../Login/login';\r\n\r\n\r\nconst GameDetails = ({title, details,gameType, gameName,gamePath}) => {\r\n    const {user} = useContext(UserContext)\r\n    const {openModal} = useContext(ModalContext)\r\n    const history = useHistory()\r\n    const toGame = () =>{\r\n        history.push({\r\n                pathname : `${gameType}`,\r\n                state:  {gameName, gamePath} \r\n               \r\n            })   \r\n    }\r\n\r\n    return ( \r\n        <div className=\"game-details\">\r\n            <div className=\"game-details-image-container\">\r\n                <img src=\"https://images.unsplash.com/photo-1589289959525-b5b685332c7f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=80\" alt=\"none\"/>\r\n            </div>\r\n\r\n            <div className=\"game-details-content\">\r\n                <p className=\"game-details-title text-medium\">\r\n                   {title}\r\n                </p>\r\n                <div className=\"game-details-info\">\r\n                    <p className=\"text-medium\">{details}</p>\r\n                   {user.id ? \r\n                   <p className=\"game-details-play text-medium\" onClick={() => toGame()}>Play</p> :\r\n                   <p className=\"game-details-play text-medium\" onClick={() => openModal(Login)}>Log In to Play</p>\r\n                   }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameDetails;","import React from 'react';\r\nimport GameDetails from \"../GameDetails/gameDetails\"\r\nimport \"./gameList.css\"\r\n\r\nconst GameList = () => {\r\n\r\n    const games = []\r\n\r\n    return ( \r\n            <div className=\"game-list-container\">\r\n                <section className=\"game-list\">\r\n                   \r\n                        <GameDetails title=\"online game\" details=\"its a mulitplayer game\" gameType=\"/mulitPlayerGame\" gameType=\"/mulitPlayerGame\" gameName=\"onlineGame\"/>\r\n                        <GameDetails title=\"Stick game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/stickGame\" gameName=\"stick adventure demo\"/>\r\n                        <GameDetails title=\"Cube game\" details=\"its a single player game\" gameType=\"/singlePlayerGame/\" gamePath=\"/cubeGame\" gameName=\"Cube Game Demo\"/>\r\n                        \r\n              \r\n                    \r\n                </section>\r\n            </div>\r\n        \r\n      \r\n     );\r\n}\r\n \r\nexport default GameList;","import React from 'react';\r\nimport GameList from \"../GameList/gameList\"\r\nimport \"./home.css\"\r\n\r\nconst Home = () => {\r\n\r\n    return ( \r\n      <div className=\"container\">\r\n        <div className=\"top-section\">\r\n        < h1>Select a Game</h1>\r\n        </div>\r\n        <div className=\"game-list-section\">\r\n        <GameList/>\r\n        </div>\r\n      </div>\r\n      \r\n     );\r\n}\r\n \r\nexport default Home;","import React,{useState,useContext, useRef} from 'react';\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport \"./signup.css\"\r\n\r\nconst Signup = () => {\r\n    const {signup} = useContext(UserContext)\r\n    const {closeModal} = useContext(ModalContext)\r\n    const { handleSubmit, register, errors,watch } = useForm();\r\n    const [showErrorMessage, setShowErrorMessage] = useState({\r\n        message : \"\",\r\n        class : \"hide\"\r\n    })\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const onSubmit = async (values) =>{\r\n        const res = await signup(values)\r\n        if(res == \"success\"){\r\n            closeModal();\r\n        }else{\r\n            setShowErrorMessage({\r\n                message : res,\r\n                class: \"show\"\r\n            })\r\n             setTimeout(() =>{\r\n                setShowErrorMessage(prevState =>({\r\n                    ...prevState,\r\n                    class: \"hide\"\r\n                }))\r\n             }, 3000)\r\n       }\r\n    } \r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input  className=\"form-control\" id=\"\"name=\"username\" type=\"text\" placeholder=\"please enter a username\" \r\n                    ref={register({\r\n                        required: \"please enter a username\",\r\n                        minLength : {value : 5,message : \"username must have at least 5 characters\"}, \r\n                    })}\r\n                   />\r\n            {errors.username && <div className=\"invalid-input-message\">{errors.username.message}</div>}\r\n\r\n            <input className=\"form-control\" name=\"email\" type=\"email\" placeholder=\"please enter a email\" \r\n                    ref={register({\r\n                        required: \"please enter a valid email address\",\r\n                        pattern: {value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,message: \"invalid email address\"}\r\n                    })}\r\n                   />            \r\n            {errors.email && <div className=\"invalid-input-message\">{errors.email.message}</div>}\r\n\r\n            <input className=\"form-control\" name=\"password\" type=\"password\" placeholder=\"please enter a password\" \r\n                    ref={register({\r\n                        required: \"this is required\",\r\n                        minLength : {value : 5,message : \"Password must have at least 5 characters\"},\r\n                    })}\r\n                   />\r\n            {errors.password && <div className=\"invalid-input-message\">{errors.password.message}</div>}\r\n\r\n\r\n            <input className=\"form-control\" name=\"password_repeat\" type=\"password\" placeholder=\"please confirm pasword\" \r\n                    ref={register({\r\n                        validate: value => value === password.current || \"The passwords do not match\"  \r\n                })}\r\n                />\r\n            {errors.password_repeat && <div className=\"invalid-input-message\">{errors.password_repeat.message}</div>}\r\n\r\n            <input  className=\"form-control btn btn-primary\"  type=\"submit\" value=\"Sign up\"/>\r\n            <div className=\"error-message-container\">\r\n                <div className={\"error-message \" +  showErrorMessage.class}>{showErrorMessage.message}</div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Signup;","import React, {useContext,useState, useEffect} from 'react';\r\nimport Login from \"../Login/login\"\r\nimport Signup from \"../Signup/signup\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"./navbar.css\"\r\nimport Logo from \"./logo.png\";\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport {UserContext} from '../../contexts/userContext';\r\n\r\n\r\nconst Navbar = () => {\r\n  const {openModal} = useContext(ModalContext)\r\n  const {user, signout} = useContext(UserContext)\r\n\r\n\r\n    return ( \r\n        <header>\r\n          <Link  className=\"logo-container\" to=\"/\">\r\n          <img className=\"logo\" src={Logo} alt=\"Logo\" />\r\n          </Link>\r\n          <nav>     \r\n              { user.id ? \r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => signout()}><a/>Signout</li>\r\n                    <li> <Link to=\"/profile\">Profile</Link></li>\r\n                  </ul>\r\n                  :\r\n                  <ul className=\"nav-links\">\r\n                    <li onClick={() => openModal(Signup)}><a/>Sign Up</li>\r\n                    <li onClick={() => openModal(Login)}><a/>Login</li>\r\n                  </ul>\r\n              }\r\n            \r\n          </nav>\r\n          {/* <a className=\"cta\"><button>Contact</button></a> */}\r\n      </header> \r\n     );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext,useEffect,useState} from 'react';\r\nimport {ModalContext} from '../../contexts/modalContext';\r\nimport Modal from \"react-modal\";\r\nimport \"./modal.css\"\r\n\r\nModal.setAppElement('#root')\r\nconst CModal = () => {\r\n    const {modal, closeModal} = useContext(ModalContext)     \r\n    return ( \r\n        <div>      \r\n             \r\n            <Modal \r\n            style={{overlay :{borderColor: \"grey\"},content : {\r\n  \r\n                height:\"fit-content\",\r\n                width: \"fit-content\",\r\n                position : \"fixed\",\r\n                margin: \"5% auto\",\r\n                left: \"0\",\r\n                right: \"0\",\r\n                padding : \"15px\"\r\n\r\n             } \r\n            }} \r\n            isOpen={modal.isShowModal}\r\n            onRequestClose={() => closeModal() }\r\n            >\r\n                <div className=\"close-button-container\">\r\n                 <div className=\"close-button\" onClick={() => closeModal()}>X</div>\r\n                </div>\r\n                <React.Fragment>\r\n             {modal.component != \"\" ? <modal.component/> : <></>}\r\n              </React.Fragment>\r\n               \r\n            </Modal>\r\n        </div> \r\n     ) \r\n}\r\n \r\nexport default CModal;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst AdminTable = (props) => {\r\n    console.log(props)\r\n    return ( \r\n        <Table striped bordered hover>\r\n            <thead>\r\n                    <tr>\r\n                        {props.tableHeaders.map((th) =>{\r\n                            return <th key={th}>{th}</th>\r\n                        })}\r\n                    </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.tableRows.map((tr, index) =>{\r\n                    return <tr key={index}>{Object.keys(tr).map((td) =>{\r\n                        if(typeof(tr[td] == \"string\")){\r\n                            return <td key={tr[td].toString()}>{tr[td].toString()}</td>\r\n                        }\r\n                    })}</tr>\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n     );\r\n}\r\n \r\nexport default AdminTable;","import React, {useState, useEffect} from 'react';\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport AdminTable from './adminTable';\r\nimport config from \"../../config\"\r\n\r\nconst Admin = () => {\r\n\r\n    const [table, setTable] = useState({\r\n            headers : [],\r\n            rows : [],\r\n    })\r\n\r\n    const sortTable = (tables) =>{\r\n        //get table headers\r\n        const headers = Object.keys(tables[0])\r\n        //set table headers\r\n        setTable({\r\n            rows :  tables,\r\n            headers : headers\r\n        })\r\n    }\r\n\r\n\r\n    const setNewTable = async (entityType, filter) =>{\r\n        const res =  await fetch(`${config.API_URL}/${entityType}/get${entityType}s`, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n        const tableData = await res.json()\r\n        sortTable(tableData)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setNewTable(\"user\")\r\n    },[])\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n        <Tabs defaultActiveKey=\"challenges\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"challenges\" title=\"challenge\" onSelect={() => setNewTable(\"challenge\")}>\r\n                <AdminTable tableHeaders={table.headers} tableRows={table.rows}/>\r\n            </Tab>\r\n            <Tab eventKey=\"users\" title=\"user\" onSelect={() => setNewTable(\"user\")}>\r\n                <AdminTable tableHeaders={table.headers} tableRows={table.rows}/>\r\n            </Tab>\r\n            <Tab ref=\"games\" eventKey=\"games\" title=\"game\" onSelect={() => setNewTable(\"game\")}>\r\n             <AdminTable tableHeaders={table.headers} tableRows={table.rows}/>\r\n            </Tab>\r\n        </Tabs>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Admin;","import React from 'react';\nimport SinglePlayerGame from \"./components/SinglePlayerGame/singlePlayerGame\"\nimport MultiPlayerGame from \"./components/MultiPlayerGame/multiPlayerGame\"\nimport Profile from './components/Profile/profile';\nimport { ToastProvider } from 'react-toast-notifications'\nimport Home from \"./components/Home/home\"\nimport Navbar from \"./components/Navbar/navbar\"\nimport GameContextProvider from './contexts/gameContext';\nimport UserContextProvider from './contexts/userContext';\nimport ModalContextProvider from './contexts/modalContext';\nimport { BrowserRouter as Router,Route, Switch} from \"react-router-dom\";\nimport CModal from './components/Modal/Modal';\nimport config from \"./config\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Admin from './components/Admin/admin';\n\nfunction App() {\n  console.log(config)\n  return (\n    <Router>\n      <div className=\"App\">\n      <ToastProvider autoDismissTimeout={3000}>\n        <ModalContextProvider>\n        <UserContextProvider>\n        <GameContextProvider>\n          <Navbar/> \n          <CModal/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/mulitPlayerGame\" exact  component={MultiPlayerGame}/>   \n              <Route path=\"/singlePlayerGame\"  component={SinglePlayerGame}/>  \n              <Route path=\"/profile\"  exact component={Profile}/>    \n              <Route path=\"/admin\"  exact component={Admin}/>   \n              <Route component={Home}/>  \n            </Switch>\n             \n        </GameContextProvider>\n        </UserContextProvider>\n        </ModalContextProvider>\n        </ToastProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3fa434f6.png\";"],"sourceRoot":""}